= 前提条件
Userテーブル=>Devise
Itemテーブル=>記事を作成する。title:string text:textでscaffold


= CarrerWave File Uploading  
ASCIICASTS[http://ja.asciicasts.com/episodes/253-carrierwave-file-uploads]
ほぼまんまでいけるimageカラムをitemテーブルに追加。

= Devise 導入
これ[http://kitbc.s41.xrea.com/main/?use_devise]にそってやる。

= リレーション
itemモデルに参照元となるuser_idを追加（これ忘れたら作れない。案外これ載っていない。）
	rails g migration add_user_id_to_items

そのあとフォームを利用してuser_idを自動で登録するようにする。
  <div class="field">
    <%= f.hidden_field :user_id, :value => current_user.id %>  
  </div>

こちら[http://neec-is.g.hatena.ne.jp/is178/20091206/1260069121]を見て、試しにEmailアドレスを表示する。
	<td><%= item.user.email %></td>

これをindex.html.erbに追加。
Userテーブルにnameでも追加すれば、簡単に表示ができる。

= Mini_magickでページごとに画像調整

RailsGirls[http://railsgirls-jp.github.io/thumbnails/]に載っている。

Mini_magick該当箇所のコメントアウトを外す

app/uploaders/image_uploader.rb
	version :thumb do
  	process :resize_to_fill => [200,200]
	end



	version :show do
	  process :resize_to_fill => [300,250]
	end

のように、versionごとに分けて記載する。

そのあと、viewのitemでthumbならindexのimage_tagの末尾に(:thumb)をつけるなど、各場合についてversionを適用する。

= acts_as_taggable_on

ASCIICASTS[http://railscasts.com/episodes/382-tagging?language=ja&view=asciicast]
をまんま使えば大丈夫。
mapはタイトル検索などで使い分けないといけないかも

= bootstrap

application.js,application.cssにrequireを書く
navbarはnavbar-fixed-topにすると、ウィンドウを小さくしても
余白が生まれたりしない。

root_pathやdestroy_user_session_pathなどは、liタグの次に書く

	<% if user_signed_in? %>
		...
	<% end %>

でnavbarの表示を変える

flat-uiとかも適用できる！やったね！

= サムネイルにリンクはる

こちら[http://d.hatena.ne.jp/satake7/20080908/p1]を参考にする

= 投稿したユーザーのみdestroyとかeditとか表示する

	<% if current_user == item.user %>
		...
	<% end %>

itemってとこが重要。
このやり方で他のページもできるよ。